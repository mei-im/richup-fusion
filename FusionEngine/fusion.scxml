<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:commons="http://commons.apache.org/scxml" xmlns:emma="http://www.w3.org/2003/04/emma" xmlns:mmi="http://www.w3.org/2008/04/mmi-arch" xmlns:schemaLocation="http://www.w3.org/2005/07/scxml scxml.xsd http://commons.apache.org/scxml commons.xsd http://www.w3.org/2008/04/mmi-arch mmi.xsd http://www.w3.org/2003/04/emma emma.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" initialstate="init">
  <datamodel>
    <data name="data1" />
    <data name="data2" />
  </datamodel>
  <state id="init">
    <onentry>
      <log label="[init]" expr="READY" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="main">
    <onentry>
      <log label="[main]" expr="READY" />
    </onentry>
    <transition target="sspeech[speech][game_info]" event="[SPEECH][GAME_INFO]" />
    <transition target="sgestures[gestures][handrightuphelp]" event="[GESTURES][HANDRIGHTUPHELP]" />
    <transition target="sspeech[speech][give_up_game]" event="[SPEECH][GIVE_UP_GAME]" />
    <transition target="sgestures[gestures][handsfrontselect]" event="[GESTURES][HANDSFRONTSELECT]" />
    <transition target="sspeech[speech][choose_color][azul]" event="[SPEECH][CHOOSE_COLOR][AZUL]" />
    <transition target="sgestures[gestures][handsdifferentdirectionsclose]" event="[GESTURES][HANDSDIFFERENTDIRECTIONSCLOSE]" />
    <transition target="sgestures[gestures][handonedirectionrolldice]" event="[GESTURES][HANDONEDIRECTIONROLLDICE]" />
    <transition target="sspeech[speech][end_turn]" event="[SPEECH][END_TURN]" />
    <transition target="sgestures[gestures][handsjoin]" event="[GESTURES][HANDSJOIN]" />
    <transition target="sspeech[speech][roll_dice]" event="[SPEECH][ROLL_DICE]" />
    <transition target="sspeech[speech][buy_house]" event="[SPEECH][BUY_HOUSE]" />
    <transition target="sgestures[gestures][handsupgiveup]" event="[GESTURES][HANDSUPGIVEUP]" />
    <transition target="sspeech[speech][list_of_colors]" event="[SPEECH][LIST_OF_COLORS]" />
    <transition target="sspeech[speech][choose_color][cyan]" event="[SPEECH][CHOOSE_COLOR][CYAN]" />
  </state>
  <state id="sspeech[speech][game_info]">
    <onentry>
      <log label="[sspeech[speech][game_info]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][game_info]" event="timeout-sspeech[speech][game_info]" delay="10000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][game_info]-final" event="timeout-sspeech[speech][game_info]" />
    <transition target="sspeech[speech][game_info]-gestures[gestures][handrightuphelp]" event="[GESTURES][HANDRIGHTUPHELP]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][game_info]" />
    </onexit>
  </state>
  <state id="speech[speech][game_info]-final">
    <onentry>
      <log label="[speech[speech][game_info]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][GAME_INFO]')}" />
      <send event="GAME_INFO" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][game_info]-gestures[gestures][handrightuphelp]">
    <onentry>
      <log label="[sspeech[speech][game_info]-gestures[gestures][handrightuphelp]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][HELP_GAME_INFO]')}" />
      <send event="HELP_GAME_INFO" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handrightuphelp]">
    <onentry>
      <log label="[sgestures[gestures][handrightuphelp]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][handrightuphelp]" event="timeout-sgestures[gestures][handrightuphelp]" delay="10000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sgestures[gestures][handrightuphelp]" />
    <transition target="sgestures[gestures][handrightuphelp]-speech[speech][game_info]" event="[SPEECH][GAME_INFO]" />
    <transition target="sgestures[gestures][handrightuphelp]-speech[speech][list_of_colors]" event="[SPEECH][LIST_OF_COLORS]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][handrightuphelp]" />
    </onexit>
  </state>
  <state id="sgestures[gestures][handrightuphelp]-speech[speech][game_info]">
    <onentry>
      <log label="[sgestures[gestures][handrightuphelp]-speech[speech][game_info]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][HELP_GAME_INFO]')}" />
      <send event="HELP_GAME_INFO" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handrightuphelp]-speech[speech][list_of_colors]">
    <onentry>
      <log label="[sgestures[gestures][handrightuphelp]-speech[speech][list_of_colors]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][HELP_LIST_OF_COLORS]')}" />
      <send event="HELP_LIST_OF_COLORS" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][give_up_game]">
    <onentry>
      <log label="[sspeech[speech][give_up_game]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][give_up_game]" event="timeout-sspeech[speech][give_up_game]" delay="3000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][give_up_game]-final" event="timeout-sspeech[speech][give_up_game]" />
    <transition target="sspeech[speech][give_up_game]-gestures[gestures][handsupgiveup]" event="[GESTURES][HANDSUPGIVEUP]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][give_up_game]" />
    </onexit>
  </state>
  <state id="speech[speech][give_up_game]-final">
    <onentry>
      <log label="[speech[speech][give_up_game]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][GIVE_UP_GAME]')}" />
      <send event="GIVE_UP_GAME" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][give_up_game]-gestures[gestures][handsupgiveup]">
    <onentry>
      <log label="[sspeech[speech][give_up_game]-gestures[gestures][handsupgiveup]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][GIVE_UP_GAME]')}" />
      <send event="GIVE_UP_GAME" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handsfrontselect]">
    <onentry>
      <log label="[sgestures[gestures][handsfrontselect]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][handsfrontselect]" event="timeout-sgestures[gestures][handsfrontselect]" delay="10000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][handsfrontselect]-final" event="timeout-sgestures[gestures][handsfrontselect]" />
    <transition target="sgestures[gestures][handsfrontselect]-speech[speech][choose_color][cyan]" event="[SPEECH][CHOOSE_COLOR][CYAN]" />
    <transition target="sgestures[gestures][handsfrontselect]-speech[speech][choose_color][azul]" event="[SPEECH][CHOOSE_COLOR][AZUL]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][handsfrontselect]" />
    </onexit>
  </state>
  <state id="gestures[gestures][handsfrontselect]-final">
    <onentry>
      <log label="[gestures[gestures][handsfrontselect]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][SELECT]')}" />
      <send event="SELECT" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handsfrontselect]-speech[speech][choose_color][cyan]">
    <onentry>
      <log label="[sgestures[gestures][handsfrontselect]-speech[speech][choose_color][cyan]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][SELECT_COLOR_CYAN]')}" />
      <send event="SELECT_COLOR_CYAN" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handsfrontselect]-speech[speech][choose_color][azul]">
    <onentry>
      <log label="[sgestures[gestures][handsfrontselect]-speech[speech][choose_color][azul]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][SELECT_COLOR_AZUL]')}" />
      <send event="SELECT_COLOR_AZUL" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][choose_color][azul]">
    <onentry>
      <log label="[sspeech[speech][choose_color][azul]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][choose_color][azul]" event="timeout-sspeech[speech][choose_color][azul]" delay="10000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][choose_color][azul]-final" event="timeout-sspeech[speech][choose_color][azul]" />
    <transition target="sspeech[speech][choose_color][azul]-gestures[gestures][handsfrontselect]" event="[GESTURES][HANDSFRONTSELECT]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][choose_color][azul]" />
    </onexit>
  </state>
  <state id="speech[speech][choose_color][azul]-final">
    <onentry>
      <log label="[speech[speech][choose_color][azul]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][CHOOSE_COLOR_AZUL]')}" />
      <send event="CHOOSE_COLOR_AZUL" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][choose_color][azul]-gestures[gestures][handsfrontselect]">
    <onentry>
      <log label="[sspeech[speech][choose_color][azul]-gestures[gestures][handsfrontselect]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][SELECT_COLOR_AZUL]')}" />
      <send event="SELECT_COLOR_AZUL" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handsdifferentdirectionsclose]">
    <onentry>
      <log label="[sgestures[gestures][handsdifferentdirectionsclose]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][handsdifferentdirectionsclose]" event="timeout-sgestures[gestures][handsdifferentdirectionsclose]" delay="3000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][handsdifferentdirectionsclose]-final" event="timeout-sgestures[gestures][handsdifferentdirectionsclose]" />
    <transition target="sgestures[gestures][handsdifferentdirectionsclose]-speech[speech][end_turn]" event="[SPEECH][END_TURN]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][handsdifferentdirectionsclose]" />
    </onexit>
  </state>
  <state id="gestures[gestures][handsdifferentdirectionsclose]-final">
    <onentry>
      <log label="[gestures[gestures][handsdifferentdirectionsclose]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][END_TURN]')}" />
      <send event="END_TURN" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handsdifferentdirectionsclose]-speech[speech][end_turn]">
    <onentry>
      <log label="[sgestures[gestures][handsdifferentdirectionsclose]-speech[speech][end_turn]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][END_TURN]')}" />
      <send event="END_TURN" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handonedirectionrolldice]">
    <onentry>
      <log label="[sgestures[gestures][handonedirectionrolldice]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][handonedirectionrolldice]" event="timeout-sgestures[gestures][handonedirectionrolldice]" delay="10000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][handonedirectionrolldice]-final" event="timeout-sgestures[gestures][handonedirectionrolldice]" />
    <transition target="sgestures[gestures][handonedirectionrolldice]-speech[speech][buy_house]" event="[SPEECH][BUY_HOUSE]" />
    <transition target="sgestures[gestures][handonedirectionrolldice]-speech[speech][roll_dice]" event="[SPEECH][ROLL_DICE]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][handonedirectionrolldice]" />
    </onexit>
  </state>
  <state id="gestures[gestures][handonedirectionrolldice]-final">
    <onentry>
      <log label="[gestures[gestures][handonedirectionrolldice]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][ROLL_DICE]')}" />
      <send event="ROLL_DICE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handonedirectionrolldice]-speech[speech][buy_house]">
    <onentry>
      <log label="[sgestures[gestures][handonedirectionrolldice]-speech[speech][buy_house]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][ROLL_DICE_BUY_HOUSE]')}" />
      <send event="ROLL_DICE_BUY_HOUSE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handonedirectionrolldice]-speech[speech][roll_dice]">
    <onentry>
      <log label="[sgestures[gestures][handonedirectionrolldice]-speech[speech][roll_dice]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][ROLL_DICE]')}" />
      <send event="ROLL_DICE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][end_turn]">
    <onentry>
      <log label="[sspeech[speech][end_turn]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][end_turn]" event="timeout-sspeech[speech][end_turn]" delay="3000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][end_turn]-final" event="timeout-sspeech[speech][end_turn]" />
    <transition target="sspeech[speech][end_turn]-gestures[gestures][handsdifferentdirectionsclose]" event="[GESTURES][HANDSDIFFERENTDIRECTIONSCLOSE]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][end_turn]" />
    </onexit>
  </state>
  <state id="speech[speech][end_turn]-final">
    <onentry>
      <log label="[speech[speech][end_turn]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][END_TURN]')}" />
      <send event="END_TURN" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][end_turn]-gestures[gestures][handsdifferentdirectionsclose]">
    <onentry>
      <log label="[sspeech[speech][end_turn]-gestures[gestures][handsdifferentdirectionsclose]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][END_TURN]')}" />
      <send event="END_TURN" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handsjoin]">
    <onentry>
      <log label="[sgestures[gestures][handsjoin]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][handsjoin]" event="timeout-sgestures[gestures][handsjoin]" delay="10000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][handsjoin]-final" event="timeout-sgestures[gestures][handsjoin]" />
    <transition target="sgestures[gestures][handsjoin]-speech[speech][roll_dice]" event="[SPEECH][ROLL_DICE]" />
    <transition target="sgestures[gestures][handsjoin]-speech[speech][buy_house]" event="[SPEECH][BUY_HOUSE]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][handsjoin]" />
    </onexit>
  </state>
  <state id="gestures[gestures][handsjoin]-final">
    <onentry>
      <log label="[gestures[gestures][handsjoin]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][BUY_HOUSE]')}" />
      <send event="BUY_HOUSE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handsjoin]-speech[speech][roll_dice]">
    <onentry>
      <log label="[sgestures[gestures][handsjoin]-speech[speech][roll_dice]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][ROLL_DICE_BUY_HOUSE]')}" />
      <send event="ROLL_DICE_BUY_HOUSE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handsjoin]-speech[speech][buy_house]">
    <onentry>
      <log label="[sgestures[gestures][handsjoin]-speech[speech][buy_house]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][BUY_HOUSE]')}" />
      <send event="BUY_HOUSE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][roll_dice]">
    <onentry>
      <log label="[sspeech[speech][roll_dice]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][roll_dice]" event="timeout-sspeech[speech][roll_dice]" delay="10000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][roll_dice]-final" event="timeout-sspeech[speech][roll_dice]" />
    <transition target="sspeech[speech][roll_dice]-gestures[gestures][handsjoin]" event="[GESTURES][HANDSJOIN]" />
    <transition target="sspeech[speech][roll_dice]-gestures[gestures][handonedirectionrolldice]" event="[GESTURES][HANDONEDIRECTIONROLLDICE]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][roll_dice]" />
    </onexit>
  </state>
  <state id="speech[speech][roll_dice]-final">
    <onentry>
      <log label="[speech[speech][roll_dice]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][ROLL_DICE]')}" />
      <send event="ROLL_DICE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][roll_dice]-gestures[gestures][handsjoin]">
    <onentry>
      <log label="[sspeech[speech][roll_dice]-gestures[gestures][handsjoin]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][ROLL_DICE_BUY_HOUSE]')}" />
      <send event="ROLL_DICE_BUY_HOUSE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][roll_dice]-gestures[gestures][handonedirectionrolldice]">
    <onentry>
      <log label="[sspeech[speech][roll_dice]-gestures[gestures][handonedirectionrolldice]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][ROLL_DICE]')}" />
      <send event="ROLL_DICE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][buy_house]">
    <onentry>
      <log label="[sspeech[speech][buy_house]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][buy_house]" event="timeout-sspeech[speech][buy_house]" delay="10000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][buy_house]-final" event="timeout-sspeech[speech][buy_house]" />
    <transition target="sspeech[speech][buy_house]-gestures[gestures][handonedirectionrolldice]" event="[GESTURES][HANDONEDIRECTIONROLLDICE]" />
    <transition target="sspeech[speech][buy_house]-gestures[gestures][handsjoin]" event="[GESTURES][HANDSJOIN]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][buy_house]" />
    </onexit>
  </state>
  <state id="speech[speech][buy_house]-final">
    <onentry>
      <log label="[speech[speech][buy_house]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][BUY_HOUSE]')}" />
      <send event="BUY_HOUSE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][buy_house]-gestures[gestures][handonedirectionrolldice]">
    <onentry>
      <log label="[sspeech[speech][buy_house]-gestures[gestures][handonedirectionrolldice]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][ROLL_DICE_BUY_HOUSE]')}" />
      <send event="ROLL_DICE_BUY_HOUSE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][buy_house]-gestures[gestures][handsjoin]">
    <onentry>
      <log label="[sspeech[speech][buy_house]-gestures[gestures][handsjoin]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][BUY_HOUSE]')}" />
      <send event="BUY_HOUSE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handsupgiveup]">
    <onentry>
      <log label="[sgestures[gestures][handsupgiveup]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][handsupgiveup]" event="timeout-sgestures[gestures][handsupgiveup]" delay="3000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][handsupgiveup]-final" event="timeout-sgestures[gestures][handsupgiveup]" />
    <transition target="sgestures[gestures][handsupgiveup]-speech[speech][give_up_game]" event="[SPEECH][GIVE_UP_GAME]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][handsupgiveup]" />
    </onexit>
  </state>
  <state id="gestures[gestures][handsupgiveup]-final">
    <onentry>
      <log label="[gestures[gestures][handsupgiveup]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][GIVE_UP_GAME]')}" />
      <send event="GIVE_UP_GAME" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][handsupgiveup]-speech[speech][give_up_game]">
    <onentry>
      <log label="[sgestures[gestures][handsupgiveup]-speech[speech][give_up_game]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][GIVE_UP_GAME]')}" />
      <send event="GIVE_UP_GAME" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][list_of_colors]">
    <onentry>
      <log label="[sspeech[speech][list_of_colors]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][list_of_colors]" event="timeout-sspeech[speech][list_of_colors]" delay="10000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][list_of_colors]-final" event="timeout-sspeech[speech][list_of_colors]" />
    <transition target="sspeech[speech][list_of_colors]-gestures[gestures][handrightuphelp]" event="[GESTURES][HANDRIGHTUPHELP]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][list_of_colors]" />
    </onexit>
  </state>
  <state id="speech[speech][list_of_colors]-final">
    <onentry>
      <log label="[speech[speech][list_of_colors]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][LIST_OF_COLORS]')}" />
      <send event="LIST_OF_COLORS" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][list_of_colors]-gestures[gestures][handrightuphelp]">
    <onentry>
      <log label="[sspeech[speech][list_of_colors]-gestures[gestures][handrightuphelp]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][HELP_LIST_OF_COLORS]')}" />
      <send event="HELP_LIST_OF_COLORS" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][choose_color][cyan]">
    <onentry>
      <log label="[sspeech[speech][choose_color][cyan]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][choose_color][cyan]" event="timeout-sspeech[speech][choose_color][cyan]" delay="10000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][choose_color][cyan]-final" event="timeout-sspeech[speech][choose_color][cyan]" />
    <transition target="sspeech[speech][choose_color][cyan]-gestures[gestures][handsfrontselect]" event="[GESTURES][HANDSFRONTSELECT]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][choose_color][cyan]" />
    </onexit>
  </state>
  <state id="speech[speech][choose_color][cyan]-final">
    <onentry>
      <log label="[speech[speech][choose_color][cyan]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][CHOOSE_COLOR_CYAN]')}" />
      <send event="CHOOSE_COLOR_CYAN" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][choose_color][cyan]-gestures[gestures][handsfrontselect]">
    <onentry>
      <log label="[sspeech[speech][choose_color][cyan]-gestures[gestures][handsfrontselect]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][SELECT_COLOR_CYAN]')}" />
      <send event="SELECT_COLOR_CYAN" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
</scxml>
