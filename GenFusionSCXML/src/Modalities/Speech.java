/* 
  *   Speech.java generated by speechmod 
 */   

package Modalities; 

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import scxmlgen.interfaces.IModality; 

public enum Speech implements IModality{  
    //CORES
	CHOOSE_COLOR_LIME("[SPEECH][CHOOSE_COLOR][LIME]", 5000),
    CHOOSE_COLOR_YELLOW("[SPEECH][CHOOSE_COLOR][YELLOW]", 5000),
    CHOOSE_COLOR_ORANGE("[SPEECH][CHOOSE_COLOR][ORANGE]", 5000),
    CHOOSE_COLOR_RED("[SPEECH][CHOOSE_COLOR][RED]", 5000),
    CHOOSE_COLOR_BLUE("[SPEECH][CHOOSE_COLOR][BLUE]", 5000),
    CHOOSE_COLOR_CYAN("[SPEECH][CHOOSE_COLOR][CYAN]", 5000),
    CHOOSE_COLOR_WATER("[SPEECH][CHOOSE_COLOR][WATER]", 5000),
    CHOOSE_COLOR_GREEN("[SPEECH][CHOOSE_COLOR][GREEN]", 5000),
    CHOOSE_COLOR_BROWN("[SPEECH][CHOOSE_COLOR][BROWN]", 5000),
    CHOOSE_COLOR_HOTPINK("[SPEECH][CHOOSE_COLOR][HOTPINK]", 5000),
    CHOOSE_COLOR_PURPLE("[SPEECH][CHOOSE_COLOR][PURPLE]", 5000),
    CHOOSE_COLOR_PINK("[SPEECH][CHOOSE_COLOR][PINK]", 5000),
    CHOOSE_COLOR_AMARELO("[SPEECH][CHOOSE_COLOR][AMARELO]", 5000),
    CHOOSE_COLOR_LARANJA("[SPEECH][CHOOSE_COLOR][LARANJA]", 5000),
    CHOOSE_COLOR_VERMELHO("[SPEECH][CHOOSE_COLOR][VERMELHO]", 5000),
    CHOOSE_COLOR_AZUL("[SPEECH][CHOOSE_COLOR][AZUL]", 5000),
    CHOOSE_COLOR_CIANO("[SPEECH][CHOOSE_COLOR][CIANO]", 5000),
    CHOOSE_COLOR_VERDE("[SPEECH][CHOOSE_COLOR][VERDE]", 5000),
    CHOOSE_COLOR_MARROM("[SPEECH][CHOOSE_COLOR][MARROM]", 5000),
    CHOOSE_COLOR_ROSA("[SPEECH][CHOOSE_COLOR][ROSA]", 5000),
    CHOOSE_COLOR_ROXO("[SPEECH][CHOOSE_COLOR][ROXO]", 5000),
    CHOOSE_COLOR_AGUA("[SPEECH][CHOOSE_COLOR][√ÅGUA]", 5000),
    CHOOSE_COLOR_AZUL_AGUA("[SPEECH][CHOOSE_COLOR][AGUA]", 5000),
    CHOOSE_COLOR_CASTANHO("[SPEECH][CHOOSE_COLOR][CASTANHO]", 5000),
    CHOOSE_COLOR_MAGENTA("[SPEECH][CHOOSE_COLOR][MAGENTA]", 5000),
    CHOOSE_COLOR_CASTANHA("[SPEECH][CHOOSE_COLOR][CASTANHA]", 5000),
    CHOOSE_COLOR_VERDE_LIMA("[SPEECH][CHOOSE_COLOR][VERDE_LIMA]", 5000),
    CHOOSE_COLOR_VERMELHA("[SPEECH][CHOOSE_COLOR][VERMELHA]", 5000),
    CHOOSE_COLOR_AMAERELA("[SPEECH][CHOOSE_COLOR][AMAERELA]", 5000),
    CHOOSE_COLOR_ROXA("[SPEECH][CHOOSE_COLOR][ROXA]", 5000),


    // ------------------------REDUDANTES------------------------
    ROLL_DICE("[SPEECH][ROLL_DICE]", 5000),
    BUY_HOUSE("[SPEECH][BUY_HOUSE]", 5000),
    END_TURN("[SPEECH][END_TURN]", 3000),
    GIVE_UP_GAME("[SPEECH][GIVE_UP_GAME]", 3000),


    // -----------------------COMPLEMENTARES----------------------
    GAME_INFO_HELP("[SPEECH][GAME_INFO]", 5000),
    LIST_OF_COLORS_HELP("[SPEECH][LIST_OF_COLORS]", 5000),
    COMPLETED("[SPEECH][COMPLETED]", 5000),

	;

private String event; 
private int timeout;

Speech(String m, int time) {
	event=m;
	timeout=time;
}

@Override
public int getTimeOut(){
	return timeout;
}

@Override
public String getEventName(){
	return event;
}

@Override
public String getEvName(){
	return getModalityName().toLowerCase() +event.toLowerCase();
}

}
